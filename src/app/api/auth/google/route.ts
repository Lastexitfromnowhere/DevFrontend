import { NextRequest, NextResponse } from 'next/server';import jwt from 'jsonwebtoken';const JWT_SECRET = process.env.JWT_SECRET || 'your-secret-key-change-this-in-production';export async function POST(request: NextRequest) {  try {    const body = await request.json();    const { credential } = body;    if (!credential) {      return NextResponse.json(        { success: false, message: 'Credential is required' },        { status: 400 }      );    }    const googleId = `google-${Date.now()}`;    const email = `user-${Date.now()}@example.com`;    const user = {      googleId,      email,      provider: 'google',      createdAt: new Date().toISOString()    };    const token = jwt.sign(      {         userId: googleId,        email,        provider: 'google',        walletAddress: googleId       },      JWT_SECRET,      { expiresIn: '24h' }    );    return NextResponse.json({      success: true,      token,      user,      message: 'Authentication successful'    });  } catch (error) {    console.error('Error in Google authentication:', error);    return NextResponse.json(      { success: false, message: 'Authentication failed' },      { status: 500 }    );  }}